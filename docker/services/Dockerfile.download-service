# Dockerfile.download-service
# Service for downloading audio tracks

FROM python-node-base:latest AS builder

# Set working directory
WORKDIR /build

# Copy package files
COPY package*.json ./
RUN npm ci

# Copy Python requirements
COPY requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# Copy source code
COPY . .

# Production stage
FROM python-node-base:latest

# Set working directory
WORKDIR /app

# Copy built dependencies from builder stage
COPY --from=builder --chown=soundforge:soundforge /build/node_modules /app/node_modules
COPY --from=builder --chown=soundforge:soundforge /usr/local/lib/python3.10/site-packages /usr/local/lib/python3.10/site-packages

# Copy application code
COPY --chown=soundforge:soundforge . .

# Create directories with proper permissions
RUN mkdir -p /app/audio_data && \
    chown -R soundforge:soundforge /app/audio_data

# Environment variables
ENV PORT=3002 \
    SERVICE_NAME=download-service \
    AUDIO_DATA_PATH=/app/audio_data

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3002/health || exit 1

# Expose port
EXPOSE 3002

# Define volumes
VOLUME ["/app/audio_data"]

# Command to run the service
CMD ["npm", "start"]
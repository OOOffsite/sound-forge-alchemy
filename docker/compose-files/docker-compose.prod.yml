version: '3.9'

# Production environment configuration
# Optimized for cloud deployment with NVIDIA GPU acceleration

services:
  # Frontend service - production build
  frontend:
    image: sound-forge-frontend:prod
    build:
      context: ./src
      dockerfile: ../docker/services/Dockerfile.frontend
      args:
        - NODE_ENV=production
    ports:
      - "8001:8001"
    networks:
      - frontend-network
      - websocket-network
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://api-gateway:3000
      - VITE_WEBSOCKET_URL=ws://websocket-service:3006
    deploy:
      replicas: 2
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # API Gateway - production configuration
  api-gateway:
    image: sound-forge-api-gateway:prod
    build:
      context: ./backend/api-gateway
      dockerfile: ../../docker/services/Dockerfile.api-gateway
      args:
        - NODE_ENV=production
    ports:
      - "3000:3000"
    networks:
      - frontend-network
      - api-gateway-network
    environment:
      - NODE_ENV=production
      - PORT=3000
      - SERVICE_NAME=api-gateway
      - SPOTIFY_SERVICE_URL=http://spotify-service:3001
      - DOWNLOAD_SERVICE_URL=http://download-service:3002
      - PROCESSING_SERVICE_URL=http://processing-service:3003
      - ANALYSIS_SERVICE_URL=http://analysis-service:3004
      - WEBSOCKET_SERVICE_URL=http://websocket-service:3006
      - REDIS_URL=redis://redis:6379
    deploy:
      replicas: 2
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Spotify Service - production configuration
  spotify-service:
    image: sound-forge-spotify-service:prod
    build:
      context: ./backend/spotify-service
      dockerfile: ../../docker/services/Dockerfile.spotify-service
      args:
        - NODE_ENV=production
    ports:
      - "3001:3001"
    networks:
      - api-gateway-network
      - service-mesh-network
      - data-network
    environment:
      - NODE_ENV=production
      - PORT=3001
      - SERVICE_NAME=spotify-service
      - REDIS_URL=redis://redis:6379
    deploy:
      replicas: 2
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Download Service - production configuration
  download-service:
    image: sound-forge-download-service:prod
    build:
      context: ./backend/download-service
      dockerfile: ../../docker/services/Dockerfile.download-service
      args:
        - NODE_ENV=production
    ports:
      - "3002:3002"
    networks:
      - api-gateway-network
      - service-mesh-network
      - data-network
    volumes:
      - audio_data:/app/audio_data
    environment:
      - NODE_ENV=production
      - PORT=3002
      - SERVICE_NAME=download-service
      - REDIS_URL=redis://redis:6379
      - AUDIO_DATA_PATH=/app/audio_data
    deploy:
      replicas: 2
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Processing Service - NVIDIA GPU acceleration for production
  processing-service:
    image: sound-forge-processing-service:prod
    build:
      context: ./backend/processing-service
      dockerfile: ../../docker/services/Dockerfile.processing-service
      args:
        - NODE_ENV=production
    ports:
      - "3003:3003"
    networks:
      - api-gateway-network
      - service-mesh-network
      - data-network
      - websocket-network
    volumes:
      - audio_data:/app/audio_data
    environment:
      - NODE_ENV=production
      - PORT=3003
      - SERVICE_NAME=processing-service
      - REDIS_URL=redis://redis:6379
      - AUDIO_DATA_PATH=/app/audio_data
      - WEBSOCKET_SERVICE_URL=http://websocket-service:3006
      - USE_GPU=true
    deploy:
      replicas: 1  # Usually one per GPU
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '2.0'
          memory: 8G
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"

  # Analysis Service - production configuration
  analysis-service:
    image: sound-forge-analysis-service:prod
    build:
      context: ./backend/analysis-service
      dockerfile: ../../docker/services/Dockerfile.analysis-service
      args:
        - NODE_ENV=production
    ports:
      - "3004:3004"
    networks:
      - api-gateway-network
      - service-mesh-network
      - data-network
    volumes:
      - audio_data:/app/audio_data
    environment:
      - NODE_ENV=production
      - PORT=3004
      - SERVICE_NAME=analysis-service
      - REDIS_URL=redis://redis:6379
      - AUDIO_DATA_PATH=/app/audio_data
    deploy:
      replicas: 2
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # WebSocket Service - production configuration
  websocket-service:
    image: sound-forge-websocket-service:prod
    build:
      context: ./backend/websocket-service
      dockerfile: ../../docker/services/Dockerfile.websocket-service
      args:
        - NODE_ENV=production
    ports:
      - "3006:3006"
    networks:
      - api-gateway-network
      - service-mesh-network
      - websocket-network
      - data-network
    environment:
      - NODE_ENV=production
      - PORT=3006
      - SERVICE_NAME=websocket-service
      - REDIS_URL=redis://redis:6379
    deploy:
      replicas: 2
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis - Production configuration with persistence
  redis:
    image: redis:7.2-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    networks:
      - data-network
    volumes:
      - redis_data:/data
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 60s
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  # Frontend network - connects client-facing services
  frontend-network:
    driver: overlay
    name: sound-forge-frontend-network
    attachable: true

  # API Gateway network - connects API Gateway to backend services
  api-gateway-network:
    driver: overlay
    name: sound-forge-api-gateway-network
    attachable: true

  # Service Mesh network - internal communication between backend services
  service-mesh-network:
    driver: overlay
    name: sound-forge-service-mesh-network
    attachable: true

  # Data network - for data storage and persistence
  data-network:
    driver: overlay
    name: sound-forge-data-network
    attachable: true

  # WebSocket network - for real-time communication
  websocket-network:
    driver: overlay
    name: sound-forge-websocket-network
    attachable: true

volumes:
  # Audio data volume - shared between services that need to access audio files
  audio_data:
    name: sound-forge-audio-data
    driver: local
    
  # Redis data volume - for Redis persistence
  redis_data:
    name: sound-forge-redis-data
    driver: local
# Commenting this out because it is deprecated version: '3.9'

# Platform services for Sound Forge Alchemy
# This file contains shared infrastructure services like databases, caches, and monitoring tools

services:
  # Redis - For caching and pub/sub messaging between services
  redis:
    image: redis:latest
    container_name: sound-forge-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - data-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Redis Sentinel for high availability
  redis-sentinel-1:
    image: redis:latest
    container_name: sound-forge-redis-sentinel-1
    ports:
      - "26379:26379"
    networks:
      - data-network
    restart: unless-stopped

  redis-sentinel-2:
    image: redis:latest
    container_name: sound-forge-redis-sentinel-2
    ports:
      - "26380:26379"
    networks:
      - data-network
    restart: unless-stopped

  redis-sentinel-3:
    image: redis:latest
    container_name: sound-forge-redis-sentinel-3
    ports:
      - "26381:26379"
    networks:
      - data-network
    restart: unless-stopped

  # PostgreSQL - Database for storing metadata
  postgres:
    image: postgres:15-alpine
    container_name: sound-forge-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-soundforge}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
    networks:
      - data-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G

  # Supabase - Auth and database services
  supabase-db:
    image: supabase/postgres:15.1.0.117
    container_name: sound-forge-supabase-db
    ports:
      - "54322:5432"
    environment:
      - POSTGRES_PASSWORD=${SUPABASE_DB_PASSWORD:-postgres}
    volumes:
      - supabase_data:/var/lib/postgresql/data
      - ./docker/config-files/postgres/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    networks:
      - data-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
      
  # Kong API Gateway for Supabase
  supabase-kong:
    image: kong:2.8.1-alpine
    container_name: sound-forge-supabase-kong
    ports:
      - "8000:8000"
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/kong.yml
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_PROXY_LISTEN=0.0.0.0:8000
    volumes:
      - ./docker/config-files/kong/kong.yml:/kong.yml:ro
    networks:
      - frontend-network
      - data-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Monitoring tools
  grafana:
    image: grafana/grafana:latest
    container_name: sound-forge-grafana
    ports:
      - "3101:3000" # Updated Grafana port to 3101 to avoid conflict with application ports
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ../grafana/provisioning:/etc/grafana/provisioning
    networks:
      - monitoring-network
    depends_on:
      - prometheus
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

  # Node exporter for server metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: sound-forge-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M

  # cAdvisor for container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: sound-forge-cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - monitoring-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Redis exporter for Redis metrics
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: sound-forge-redis-exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redispassword}
    networks:
      - monitoring-network
      - data-network
    depends_on:
      - redis
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M

  # Prometheus - Monitoring and alerting toolkit
  prometheus:
    image: prom/prometheus:latest
    container_name: sound-forge-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/config-files/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - monitoring-network
    depends_on:
      - redis-exporter
      - cadvisor
      - node-exporter
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

networks:
  frontend-network:
    name: sound-forge-frontend-network
    driver: bridge

  data-network:
    name: sound-forge-data-network
    driver: bridge

  monitoring-network:
    name: sound-forge-monitoring-network
    driver: bridge

volumes:
  redis_data:
    name: sound-forge-redis-data
  postgres_data:
    name: sound-forge-postgres-data
  supabase_data:
    name: sound-forge-supabase-data
  grafana_data:
    name: sound-forge-grafana-data
  audio_data:
    name: sound-forge-audio-data